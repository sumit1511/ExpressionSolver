@startuml

title __SRC's Class Diagram__\n

  namespace  {
    class ExpressionTree.CreateExpressionTree {
        ~ Expression : String
        ~ ExpressionNodeList : List<ExpressionTree.ExpressionNode>
        ~ OperandStack : Stack<ExpressionTree.ExpressionNode>
        ~ OperatorStack : Stack<ExpressionTree.ExpressionNode>
        + treeExpression()
        ~ ExpressionTree.CreateExpressionTree()
    }
  }
  

  namespace  {
    class Expression.ExpressionMain {
        {static} + main()
    }
  }
  

  namespace  {
    class ExpressionTree.ExpressionNode {
        ~ Operater.Precedence : int
        ~ isOperator : boolean
        ~ type : String
        ~ value : String
        ~ ExpressionTree.ExpressionNode()
        ~ Operater.Operator()
        ~ typeOfOperator()
    }
  }
  

  namespace  {
    class Expression.ExpressionParse {
        ~ Expression : String
        + ParsedList()
        ~ Expression.ExpressionParse()
    }
  }
  

  namespace  {
    class Expression.ExpressionSolution {
    }
  }
  

  namespace  {
    class Validater.ExpressionTreeValidation {
        + ExpressionValidator()
        ~ Validater.ExpressionTreeValidation()
    }
  }
  

  namespace  {
    class Operater.Operator {
        ~ Operater.Operator : String[]
        + isOperator()
    }
  }
  

  namespace  {
    class Operater.Precedence {
        ~ precedenceList : Map<String, Integer>
        + isValidToken()
        + setPrecedence()
    }
  }
  

  namespace  {
    class Operater.SineOperands {
        ~ ExpressionNodeList : List<ExpressionTree.ExpressionNode>
        + updateList()
        ~ Operater.SineOperands()
    }
  }
  

  namespace  {
    class ExpressionTree.Tokenizer {
        ~ ExpressionNodeList : List<ExpressionTree.ExpressionNode>
        - Expression : String
        + CreateExpressionNodeList()
        ~ ExpressionTree.Tokenizer()
        ~ newNode()
    }
  }
  

  ExpressionTree.ExpressionNode o-- ExpressionTree.ExpressionNode : left
  ExpressionTree.ExpressionNode o-- ExpressionTree.ExpressionNode : right
  Validater.ExpressionTreeValidation o-- ExpressionTree.ExpressionNode : ExpressionRoot
  ExpressionTree.Tokenizer o-- Operater.Precedence : precedence


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
