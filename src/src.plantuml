@startuml

title __SRC's Class Diagram__\n

  namespace  {
    class CreateExpressionTree {
        ~ Expression : String
        ~ ExpressionNodeList : List<ExpressionNode>
        ~ OperandStack : Stack<ExpressionNode>
        ~ OperatorStack : Stack<ExpressionNode>
        + treeExpression()
        ~ CreateExpressionTree()
    }
  }
  

  namespace  {
    class ExpressionMain {
        {static} + main()
    }
  }
  

  namespace  {
    class ExpressionNode {
        ~ Precedence : int
        ~ isOperator : boolean
        ~ type : String
        ~ value : String
        ~ ExpressionNode()
        ~ Operator()
        ~ typeOfOperator()
    }
  }
  

  namespace  {
    class ExpressionParse {
        ~ Expression : String
        + ParsedList()
        ~ ExpressionParse()
    }
  }
  

  namespace  {
    class ExpressionSolution {
    }
  }
  

  namespace  {
    class ExpressionTreeValidation {
        + ExpressionValidator()
        ~ ExpressionTreeValidation()
    }
  }
  

  namespace  {
    class Operator {
        ~ Operator : String[]
        + isOperator()
    }
  }
  

  namespace  {
    class Precedence {
        ~ precedenceList : Map<String, Integer>
        + isValidToken()
        + setPrecedence()
    }
  }
  

  namespace  {
    class SineOperands {
        ~ ExpressionNodeList : List<ExpressionNode>
        + updateList()
        ~ SineOperands()
    }
  }
  

  namespace  {
    class Tokenizer {
        ~ ExpressionNodeList : List<ExpressionNode>
        - Expression : String
        + CreateExpressionNodeList()
        ~ Tokenizer()
        ~ newNode()
    }
  }
  

  ExpressionNode o-- ExpressionNode : left
  ExpressionNode o-- ExpressionNode : right
  ExpressionTreeValidation o-- ExpressionNode : ExpressionRoot
  Tokenizer o-- Precedence : precedence


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
